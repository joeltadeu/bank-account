version: "3.4"

services:

  account-mysql:
    restart: always
    container_name: account-mysql
    image: 'mysql/mysql-server:5.7'
    environment:
      MYSQL_DATABASE: visma_github_comments
      MYSQL_ROOT_USERNAME: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_ROOT_USERNAME --password=$$MYSQL_ROOT_PASSWORD
      timeout: 2s
      retries: 2

  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

  mongo:
    image: mongo
    restart: always
    ports:
        - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  account-cmd:
    image: bank/account-cmd-service-api
    container_name: account-cmd-service
    build:
      context: ./account-cmd-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - mongo

  account-qry:
    image: bank/account-qry-service-api
    container_name: account-qry-service
    build:
      context: ./account-qry-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - account-mysql

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local